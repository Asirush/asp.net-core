@*@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options

@inject IOptions<RequestLocalizationOptions> locOptions




@{
    ViewData["Title"] = "Home Page";
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = locOptions.Value.SupportedCultures.Select(s => new SelectListItem
            {
                Value = s.Name,
                Text = s.DisplayName
            }).ToList();
}

<div class="text-center">
    <h1 class="display-4">Welcome Custom: </h1>

    <hr />
    @requestCulture.RequestCulture.Culture.Name

    <hr />
    <form id="cultureForm" asp-action="Index">
        <select onchange="SetCulture(this.value)" asp-items="cultureItems"></select>
    </form>

    <hr />

  <!--<p>@ViewBag.Id</p>-->
    <ul>
        <!--Routing in Program.cs-->
        <li>A: @ViewBag.A</li>
        <li>B: @ViewBag.B</li>
        <li>C: @ViewBag.C</li>

        <!--Manual routing in Controller-->
        <li>id: @ViewBag.id</li>
        <li>name: @ViewBag.name</li>

        <!--add route via parametr using name-->
        <a asp-action="Index">Link 1</a>
        <br />
        <a asp-controller="Invoices">Link 2</a>
    </ul>

    <br/>

    <a asp-controller="Home" asp-action="Privacy">Custom URL</a>

    <p>id: @ViewBag.id</p>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>

    <script>
        function SetCulture(selectedCulture){
            var culture = "/?culture="+ selectedCulture + "&ui-culture=" + selectedCulture;

            console.log(culure);

            document.getElementById("cultureFrom").action = culture;
            //$("#cultureForm").action = culture;
            $("#cultureForm").submit();            
        }
    </script>
</div>
*@

@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options

@inject IOptions<RequestLocalizationOptions> locOptions

@{
    ViewData["Title"] = "Home Page";

    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    List<SelectListItem> cultureItems = locOptions.Value.SupportedCultures
    .Select(s => new SelectListItem
            {
                Value = s.Name,
                Text = s.DisplayName
            })
            .ToList();
}

<div class="text-center">

    <table>
        <tr>
            <td>@DateTime.Now.ToLongDateString()</td>
            <td>@(12345678.00.ToString("c"))</td>
            <td>@(123.45m.ToString("F2"))</td>
        </tr>
    </table>

    <h1 class="display-4">Welcome </h1>

    <hr />
    <form id="cultureForm" asp-action="Index">
        <select onchange="SetCulture(this.value)"
                asp-items="cultureItems"></select>
    </form>
    <hr />
    <ul>
        <li>@ViewBag.id</li>
        <li>@ViewBag.name</li>
        <li><a href="@Url.RouteUrl("defaultApi")">Home</a> </li>
    </ul>
    <br />

    <a asp-action="Index">Link 1</a>
    <br />
    <a asp-controller="Invoices">Link 1</a>



    @*
    <br />
    <a asp-controller="Home" asp-action="Privacy">Outgoing URL</a>
    <br />
    <a asp-controller="Home" asp-action="Privacy">New index</a>
    *@

    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<script>
    function SetCulture(selectedCulture) {
        var culure = "/?culture=" + selectedCulture
            + "&uiculture=" + selectedCulture;

        console.log(culure);

        document.getElementById("cultureForm").action = culure;
        //$("#cultureForm").action = culure;
        $("#cultureForm").submit();
    }
</script>